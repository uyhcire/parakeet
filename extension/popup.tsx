import React from "react";
import ReactDOM from "react-dom";
import { EngineType } from "./engine";

import "./popup.css";
import "./tailwind.css";
import useCredentials from "./useCredentials";

// Generated by https://app.brandmark.io/v3/
const logo = new URL("logo.svg", import.meta.url);

const APIKeyStatus = ({
  apiKeyStatus,
}: {
  apiKeyStatus: "VALID" | "INVALID" | "UNKNOWN";
}) => {
  if (apiKeyStatus === "VALID") {
    return <span className="text-green-400">&#10004;</span>;
  }

  if (apiKeyStatus === "INVALID") {
    return <span className="text-red-400">&#10008;</span>;
  }

  // apiKeyStatus === 'UNKNOWN'
  return null;
};

const Popup = () => {
  const credentials = useCredentials();

  return (
    <div
      // This form should look good no matter whether it is in a popup or its own tab
      className="w-screen h-screen flex flex-col items-center"
      style={{ background: "rgb(58, 71, 92)", minWidth: "500px" }}
    >
      <div
        className="flex flex-col items-center p-12"
        style={{ width: "500px" }}
      >
        <img src={logo.toString()} alt="logo" />
        <label className="block w-full my-4 text-white">
          Engine
          <select
            disabled={credentials == null}
            className="block w-full p-2 my-2 text-xs bg-gray-600"
            value={credentials?.currentEngineCreds.engineType}
            onChange={(e) => {
              credentials?.setSelectedEngine(e.target.value as EngineType);
            }}
          >
            {credentials?.availableEngines.map((engineInfo) => (
              <option key={engineInfo.engineType} value={engineInfo.engineType}>
                {engineInfo.name}
              </option>
            ))}
          </select>
        </label>
        <label className="block w-full my-4 text-white">
          API key<span className="px-1"> </span>
          <APIKeyStatus
            apiKeyStatus={
              credentials?.currentEngineCreds.apiKeyStatus ?? "UNKNOWN"
            }
          />
          <input
            className="block w-full p-2 my-2 text-xs bg-gray-500 font-mono"
            type="input"
            disabled={credentials == null} // disable if still loading
            value={credentials?.currentEngineCreds.apiKey ?? ""}
            onChange={(e) => {
              credentials?.setApiKey(e.target.value);
            }}
          />
        </label>
      </div>
    </div>
  );
};

const popup = document.getElementById("popup");
ReactDOM.render(<Popup />, popup);
